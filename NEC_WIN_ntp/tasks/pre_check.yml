---
# not check `COMPLIANCE020201` by ansible-lint
#
# Check ntp
#
  - name: check parameter 1
    assert:
      msg: "The parameter(DateTime) is Invalid."
      that: VAR_NEC_WIN_ntp_DataTime is defined

# set tmp var
  - name: set tmp var DataTime
    set_fact:
      ServersIP: "{{ VAR_NEC_WIN_ntp_DataTime.Servers | d('')}}"
      DataTimedefault: "{{ VAR_NEC_WIN_ntp_DataTime.default | d(1)}}"
    when: VAR_NEC_WIN_ntp_DataTime is defined
# check parameter
  - name: check parameter 2
    assert:
      msg: "One of the parameter(DateTime) is Invalid."
      that: ServersIP != "" and DataTimedefault != ""
    when: VAR_NEC_WIN_ntp_DataTime is defined

  # - debug:
      # msg: "DataTimedefault={{DataTimedefault}}"

  - name: set tmp var NtpServerTemp
    set_fact:
      NtpServerTemp: '{{ ServersIP[item.0] }},0x9'
    when:
      - VAR_NEC_WIN_ntp_DataTime is defined
      - (item.0 + 1) == DataTimedefault|int
    with_indexed_items: "{{ ServersIP }}"

  # - debug:
      # msg: "NtpServerTemp={{NtpServerTemp}}"

# set tmp var
  - name: set tmp var ntp 1
    set_fact:
      NtpServer: "{{ VAR_NEC_WIN_ntp.NtpServer | d('{{NtpServerTemp}}')}}"
      Type: "{{ VAR_NEC_WIN_ntp.Type | d('NTP')}}"
      CrossSiteSyncFlags: "{{ VAR_NEC_WIN_ntp.CrossSiteSyncFlags | d(2)}}"
      ResolvePeerBackoffMaxTimes: "{{ VAR_NEC_WIN_ntp.ResolvePeerBackoffMaxTimes | d(7)}}"
      ResolvePeerBackoffMinutes: "{{ VAR_NEC_WIN_ntp.ResolvePeerBackoffMinutes | d(15)}}"
      SpecialPollInterval: "{{ VAR_NEC_WIN_ntp.SpecialPollInterval | d(3600)}}"
      EventLogFlags: "{{ VAR_NEC_WIN_ntp.EventLogFlags | d(1)}}"
    when: VAR_NEC_WIN_ntp is defined

  - name: set tmp var ntp 2
    set_fact:
      NtpServer: "{{ NtpServerTemp }}"
      Type: "NTP"
      CrossSiteSyncFlags: "2"
      ResolvePeerBackoffMaxTimes: "7"
      ResolvePeerBackoffMinutes: "15"
      SpecialPollInterval: "3600"
      EventLogFlags: "1"
    when: VAR_NEC_WIN_ntp is undefined
  # - debug:
      # msg: "NtpServer={{NtpServer}}"
# check parameter
  - name: check parameter 3
    assert:
      msg: "One of the parameter(ntp) is Invalid."
      that: NtpServer != "" and Type != "" and CrossSiteSyncFlags != "" and ResolvePeerBackoffMaxTimes != "" and ResolvePeerBackoffMinutes != "" and SpecialPollInterval != "" and EventLogFlags != ""
    when: VAR_NEC_WIN_ntp is defined

# check ntp on or off
  - name: check ntp on or off
    win_shell: (Get-Service -Name "w32time").Status
    register: ret_pre_0

