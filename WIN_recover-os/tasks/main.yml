---
# not check `COMPLIANCE020201` by ansible-lint
  - name: check param VAR_WIN_recoveros_timeOut
    fail:
      msg: "VAR_WIN_recoveros_timeOut should be a number between 0 and 999."
    when:
      - VAR_WIN_recoveros_timeOut is defined
      - (VAR_WIN_recoveros_timeOut is not number) or (VAR_WIN_recoveros_timeOut < 0) or (VAR_WIN_recoveros_timeOut > 999)

  - name: check param VAR_WIN_recoveros_recoverTime.timeout
    fail:
      msg: "VAR_WIN_recoveros_recoverTime.timeout should be a number between 0 and 200."
    when:
      - VAR_WIN_recoveros_recoverTime is defined
      - VAR_WIN_recoveros_recoverTime.timeout is defined
      - (VAR_WIN_recoveros_recoverTime.timeout is not number) or (VAR_WIN_recoveros_recoverTime.timeout < 0) or (VAR_WIN_recoveros_recoverTime.timeout > 200)

  - name: VAR_WIN_recoveros_DebugInfo.crashDumpEnabled not defined
    fail:
      msg: "VAR_WIN_recoveros_DebugInfo.crashDumpEnabled should be defined and cannot be NULL."
    when:
      - VAR_WIN_recoveros_DebugInfo is defined
      - (VAR_WIN_recoveros_DebugInfo.crashDumpEnabled is undefined) or (VAR_WIN_recoveros_DebugInfo.crashDumpEnabled is none) or (VAR_WIN_recoveros_DebugInfo.crashDumpEnabled == '')

  - name: VAR_WIN_recoveros_DebugInfo defined
    block:
      - name: check param VAR_WIN_recoveros_DebugInfo.crashDumpEnabled
        fail:
          msg: "VAR_WIN_recoveros_DebugInfo.crashDumpEnabled's vaule should be 'none' or 'min' or 'kernel' or 'perfect' or 'auto' or 'active'."
        when:
          - VAR_WIN_recoveros_DebugInfo.crashDumpEnabled != 'none'
          - VAR_WIN_recoveros_DebugInfo.crashDumpEnabled != 'min'
          - VAR_WIN_recoveros_DebugInfo.crashDumpEnabled != 'kernel'
          - VAR_WIN_recoveros_DebugInfo.crashDumpEnabled != 'perfect'
          - VAR_WIN_recoveros_DebugInfo.crashDumpEnabled != 'auto'
          - VAR_WIN_recoveros_DebugInfo.crashDumpEnabled != 'active'

      - name: check param VAR_WIN_recoveros_DebugInfo.dump
        fail:
          msg: "VAR_WIN_recoveros_DebugInfo.dump should be defined and cannot be NULL."
        when:
          - VAR_WIN_recoveros_DebugInfo.crashDumpEnabled != 'none'
          - "(VAR_WIN_recoveros_DebugInfo.dump is undefined) or (VAR_WIN_recoveros_DebugInfo.dump is none) or (VAR_WIN_recoveros_DebugInfo.dump == '')"

      - name: check param VAR_WIN_recoveros_DebugInfo.overWrite
        fail:
          msg: "VAR_WIN_recoveros_DebugInfo.overWrite should be defined and cannot be NULL."
        when:
          - VAR_WIN_recoveros_DebugInfo.crashDumpEnabled != 'none'
          - VAR_WIN_recoveros_DebugInfo.crashDumpEnabled != 'min'
          - "(VAR_WIN_recoveros_DebugInfo.overWrite is undefined) or (VAR_WIN_recoveros_DebugInfo.overWrite is none) or (VAR_WIN_recoveros_DebugInfo.overWrite == '')"

      - name: check param VAR_WIN_recoveros_DebugInfo.alwaysKeepMemoryDump
        fail:
          msg: "VAR_WIN_recoveros_DebugInfo.alwaysKeepMemoryDump should be defined and cannot be NULL."
        when:
          - VAR_WIN_recoveros_DebugInfo.crashDumpEnabled != 'none'
          - VAR_WIN_recoveros_DebugInfo.crashDumpEnabled != 'min'
          - "(VAR_WIN_recoveros_DebugInfo.alwaysKeepMemoryDump is undefined) or (VAR_WIN_recoveros_DebugInfo.alwaysKeepMemoryDump is none) or (VAR_WIN_recoveros_DebugInfo.alwaysKeepMemoryDump == '')"
    when:
      - VAR_WIN_recoveros_DebugInfo is defined
      - VAR_WIN_recoveros_DebugInfo is mapping

  - name: get recover-os information
    raw: "bcdedit -v"
    register: bcdedit_result
    changed_when: bcdedit_result.rc != 0

  - name: VAR_WIN_recoveros_defaultOS_displayname defined
    block:
      - name: init os_guid
        set_fact:
          os_guid: "{% for param in bcdedit_result.stdout_lines %}{% if 'identifier' in param %} {{ param }} {% endif %}{% if VAR_WIN_recoveros_defaultOS_displayname in param %}{% break %}{% endif %}{% endfor %}"
        when: VAR_WIN_recoveros_defaultOS_displayname in bcdedit_result.stdout

      - name: check os
        fail:
          msg: "{{ VAR_WIN_recoveros_defaultOS_displayname }} is not installed."
        when: "(os_guid is undefined) or (os_guid is none) or (os_guid == '')"

      - name: set param os_guid_tmp
        set_fact:
          os_guid_tmp: "{{ os_guid.split('identifier')[-1].strip() }}"
        when: os_guid is defined and os_guid is not none

      - name: set VAR_WIN_recoveros_defaultOS_displayname
        raw: bcdedit /default "{{ os_guid_tmp }}"
        when:
          - os_guid_tmp is defined
          - os_guid_tmp is not none
    when:
      - VAR_WIN_recoveros_defaultOS_displayname is defined
      - VAR_WIN_recoveros_defaultOS_displayname is not none



  - name: set VAR_WIN_recoveros_timeOut
    raw: bcdedit /timeout "{{ VAR_WIN_recoveros_timeOut }}"
    when: VAR_WIN_recoveros_timeOut is defined

  - name: VAR_WIN_recoveros_recoverTime.enabled defined
    block:
      - name: get env:windir
        win_shell: "$env:TEMP"
        register: windir

      - name: copy powershell file
        win_copy:
          src: "timeDisplay.ps1"
          dest: '{{ windir.stdout_lines[0] }}\\timeDisplay.ps1'

      - name: set VAR_WIN_recoveros_recoverTime.timeout
        set_fact:
          timeout: 30
        when:
          - "((VAR_WIN_recoveros_recoverTime.enabled == True) | ternary('1','0')) == 1 "
          - (VAR_WIN_recoveros_recoverTime.timeout is undefined) or (VAR_WIN_recoveros_recoverTime.timeout is not number)

      - name: timeout defined to set [Time to display recovery options]
        win_shell: "{{ windir.stdout_lines[0] }}\\timeDisplay.ps1 {{ (VAR_WIN_recoveros_recoverTime.enabled == True) | ternary('1','0') }} {{ timeout }}"
        when: timeout is defined

      - name: timeout undefined to set [Time to display recovery options]
        win_shell: "{{ windir.stdout_lines[0] }}\\timeDisplay.ps1 {{ (VAR_WIN_recoveros_recoverTime.enabled == True) | ternary('1','0') }} {{ VAR_WIN_recoveros_recoverTime.timeout }}"
        when: timeout is undefined

      - name: delete powershell file
        win_file:
          path: "{{ windir.stdout_lines[0] }}\\timeDisplay.ps1"
          state: absent
    when:
      - VAR_WIN_recoveros_recoverTime is defined
      - VAR_WIN_recoveros_recoverTime.enabled is defined

  - name: set VAR_WIN_recoveros_autoReboot
    win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\CrashControl
      name: "AutoReboot"
      data: "{{ (VAR_WIN_recoveros_autoReboot == True) | ternary('1','0') }}"
      type: "dword"
    when:
      - VAR_WIN_recoveros_autoReboot is defined

  - name: set CrashDumpEnabled
    block:
      - name: CrashDumpEnabled is 0
        set_fact:
          crashDumpEnabled: 0
        when: "VAR_WIN_recoveros_DebugInfo.crashDumpEnabled == 'none'"

      - name: CrashDumpEnabled is 3
        set_fact:
          crashDumpEnabled: 3
        when: "VAR_WIN_recoveros_DebugInfo.crashDumpEnabled == 'min'"

      - name: CrashDumpEnabled is 2
        set_fact:
          crashDumpEnabled: 2
        when: "VAR_WIN_recoveros_DebugInfo.crashDumpEnabled == 'kernel'"

      - name: CrashDumpEnabled is 1 without FilterPages
        set_fact:
          crashDumpEnabled: 1
        when: "VAR_WIN_recoveros_DebugInfo.crashDumpEnabled == 'perfect'"

      - name: CrashDumpEnabled is 7
        set_fact:
          crashDumpEnabled: 7
        when: "VAR_WIN_recoveros_DebugInfo.crashDumpEnabled == 'auto'"

      - name: CrashDumpEnabled is 1 and FilterPages is 1
        set_fact:
          crashDumpEnabled: 1
          filterPages: 1
        when: "VAR_WIN_recoveros_DebugInfo.crashDumpEnabled == 'active'"
    when:
      - VAR_WIN_recoveros_DebugInfo is defined
      - VAR_WIN_recoveros_DebugInfo is mapping

  - name: set CrashDumpEnabled
    win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\CrashControl
      name: "CrashDumpEnabled"
      data: "{{ crashDumpEnabled }}"
      type: "dword"

  - name: set FilterPages
    win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\CrashControl
      name: "FilterPages"
      data: "{{ filterPages }}"
      type: "dword"
    when: filterPages is defined

  - name: delete FilterPages
    win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\CrashControl
      name: "FilterPages"
      state: absent
    when: filterPages is undefined

  - name: set MinidumpDir
    win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\CrashControl
      name: "MinidumpDir"
      data: "{{ VAR_WIN_recoveros_DebugInfo.dump }}"
      type: "expandstring"
    when: crashDumpEnabled == 3

  - name: set DumpFile
    win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\CrashControl
      name: "DumpFile"
      data: "{{ VAR_WIN_recoveros_DebugInfo.dump }}"
      type: "expandstring"
    when:
      - crashDumpEnabled != 0
      - crashDumpEnabled != 3

  - name: set Overwrite
    win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\CrashControl
      name: "Overwrite"
      data: "{{ (VAR_WIN_recoveros_DebugInfo.overWrite == True) | ternary('1','0') }}"
      type: "dword"
    when:
      - crashDumpEnabled != 0
      - crashDumpEnabled != 3

  - name: set AlwaysKeepMemoryDump
    win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\CrashControl
      name: "AlwaysKeepMemoryDump"
      data: "{{ (VAR_WIN_recoveros_DebugInfo.alwaysKeepMemoryDump == True) | ternary('1','0') }}"
      type: "dword"
    when:
      - crashDumpEnabled != 0
      - crashDumpEnabled != 3